import sys
key = []
map = []

def setMap(x):
    prev = map[x]
    map[x] = count

    print("blarg")

    if (x - cols > 0 and prev == map[x - cols]):
        setMap(x - cols)
    if (x + cols < len(map) and prev == map[x + cols]):
        setMap(x + cols)
    if (x % cols != 0 and prev == map[x - 1]):
        setMap(x - 1)
    if ((x + 1) % cols != 0 and prev == map[x + 1]):
        setMap(x + 1)
    return


def main():
    inputmap = input().split(' ')
    global cols
    global count
    rows = int(inputmap[0])
    cols = int(inputmap[1])

    for x in range(rows):
        line = input()
        for y in range(cols):
            map.append(line[y])

    count = 1
    key.append("-1")
    key.append("-1")
    for x in range(len(map)):
        if (map[x] == "0" or map[x] == "1"):
            count += 1
            key.append(map[x])
            setMap(x)

    cases = int(input())

    for num in range(cases):
        line = input().split(" ")
        if (map[(int(line[0])-1) * cols + int(line[1])-1] == map[(int(line[2])-1) * cols + int(line[3])-1]):
            if (key[map[(int(line[0])-1) * cols + int(line[1])-1]] == "1"):
                print("decimal")
            else :
                print("binary")
        else :
            print("neither")

sys.setrecursionlimit(1000000)
main()
